/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */
/*
 * This file contains the automatically generated loader-side
 * functions that form part of the extension.
 *
 * This file is awlays compiled into all loaders but compiles
 * to nothing if this extension is not enabled in the loader
 * at build time.
 */
#include "IwDebug.h"
#include "s3eAndroidFullscreen_autodefs.h"
#include "s3eEdk.h"
#include "s3eAndroidFullscreen.h"
//Declarations of Init and Term functions
extern s3eResult s3eAndroidFullscreenInit();
extern void s3eAndroidFullscreenTerminate();


// On platforms that use a seperate UI/OS thread we can autowrap functions
// here.   Note that we can't use the S3E_USE_OS_THREAD define since this
// code is oftern build standalone, outside the main loader build.
#if defined I3D_OS_IPHONE || defined I3D_OS_OSX || defined I3D_OS_LINUX || defined I3D_OS_WINDOWS

static void s3eAndroidFullscreenOn_wrap(s3eBool immersive, s3eBool stickyNavBar, s3eBool staticLayout)
{
    IwTrace(ANDROIDFULLSCREEN_VERBOSE, ("calling s3eAndroidFullscreen func on main thread: s3eAndroidFullscreenOn"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)s3eAndroidFullscreenOn, 3, immersive, stickyNavBar, staticLayout);
}

static void s3eAndroidFullscreenOff_wrap(s3eBool showStatusBar, s3eBool showNavBar, s3eBool staticLayout)
{
    IwTrace(ANDROIDFULLSCREEN_VERBOSE, ("calling s3eAndroidFullscreen func on main thread: s3eAndroidFullscreenOff"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)s3eAndroidFullscreenOff, 3, showStatusBar, showNavBar, staticLayout);
}

#define s3eAndroidFullscreenOn s3eAndroidFullscreenOn_wrap
#define s3eAndroidFullscreenOff s3eAndroidFullscreenOff_wrap

#endif

void s3eAndroidFullscreenRegisterExt()
{
    /* fill in the function pointer struct for this extension */
    void* funcPtrs[3];
    funcPtrs[0] = (void*)s3eAndroidFullscreenIsImmersiveSupported;
    funcPtrs[1] = (void*)s3eAndroidFullscreenOn;
    funcPtrs[2] = (void*)s3eAndroidFullscreenOff;

    /*
     * Flags that specify the extension's use of locking and stackswitching
     */
    int flags[3] = { 0 };

    /*
     * Register the extension
     */
s3eEdkRegister("s3eAndroidFullscreen", funcPtrs, sizeof(funcPtrs), flags, s3eAndroidFullscreenInit, s3eAndroidFullscreenTerminate, 0);
}

#if !defined S3E_BUILD_S3ELOADER

#if defined S3E_EDK_USE_STATIC_INIT_ARRAY
int s3eAndroidFullscreenStaticInit()
{
    void** p = g_StaticInitArray;
    void* end = p + g_StaticArrayLen;
    while (*p) p++;
    if (p < end)
        *p = (void*)&s3eAndroidFullscreenRegisterExt;
    return 0;
}

int g_s3eAndroidFullscreenVal = s3eAndroidFullscreenStaticInit();

#elif defined S3E_EDK_USE_DLLS
S3E_EXTERN_C S3E_DLL_EXPORT void RegisterExt()
{
    s3eAndroidFullscreenRegisterExt();
}
#endif

#endif
